#!/usr/bin/en 
# -*- coding: utf-8 -*- 

"""
This script is part of the aialchemyhub.in project 
(https://github.com/satya25/aialchemyhub_in).

Distributed under the MIT License (see LICENSE file for details).
"""    

# ----------------------------------------------------------------------------
# File Name         :       matplotlib/example_9.py
# Created By        :       Satya Prakash Nigam <spnigam25@yahoo.com>
# Created Date      :       Dec 20, 2023
# Last Updated On   :       Jan 17, 2024
# version           :       1.0
# Release           :       R1
#
# Dependencies      :       numpy, matplotlib
#
# Installation      :       $ pip install -r ./matplotlib/requirements.txt
#
# Usage             :       python ./matplotlib/example_7.py
#
# ---------------------------------------------------------------------------
#
# Credits and Acknowledgements
#
# - Special thanks to the matplotlib community for their excellent library:
#   https://matplotlib.org/
#
# - The APIs used in this script is documented here:
#  https://matplotlib.org/stable/users/explain/quick_start.html
#
# - Code Snippet(s) adapted from    :   -- NOT Applicable --
#
# - Dataset(s) sourced  from        :   -- NOT Applicable --
#
#
# Thank you to the creators and maintainers of these resources!
#
 
'''
    Stacked Bar Chart:
    ------------------
    
    A stacked bar chart is a graphical representation that depicts 
    multiple datasets in a single bar, where each segment of the 
    bar represents a subset of the data. This type of chart is 
    particularly useful for illustrating the cumulative effect 
    of different components contributing to the total. In a 
    stacked bar chart generated by Matplotlib, each bar is 
    divided into segments, and the height of each segment 
    corresponds to the proportion of the total contributed by
    a specific category or subgroup. This visualization 
    effectively conveys the overall composition and relative 
    contributions of different elements across multiple categories.

    Grouped Bar Chart:
    ------------------
    
    A grouped bar chart is a visual representation that displays 
    multiple datasets side by side within the same category, 
    making it easy to compare values across different groups. 
    In a grouped bar chart created using Matplotlib, bars are 
    arranged in clusters, with each cluster representing a 
    distinct category. Within each cluster, individual bars 
    represent the values of different datasets, allowing for a 
    direct visual comparison between corresponding bars in 
    different groups. This type of chart is particularly 
    effective when you want to highlight variations and 
    relationships between groups while maintaining a clear 
    distinction between categories.
 

    These two types of bar charts are powerful tools 
    provided by Matplotlib for visualizing and analyzing 
    complex datasets with multiple dimensions and categories. 
    They offer insights into the distribution and relationships 
    of data points, aiding in the interpretation and 
    communication of valuable information.
 
''' 

import matplotlib.pyplot as plt
import numpy as np

def main():
    '''
        This script generates a figure with two subplots: one for stacked bar 
        chart and another for grouped bar chart. 
        
        The chart is saved as 'stacked_grouped_bar_charts.png'.
    '''
    
    try:
        # Sample data
        categories = ['Category A', 'Category B', 'Category C', 'Category D']
        values1 = np.array([20, 35, 25, 40])
        values2 = np.array([15, 25, 30, 20])
        values3 = np.array([10, 30, 25, 35])

        # Stacked Bar Chart
        plt.figure(figsize=(12, 6))

        plt.subplot(1, 2, 1)
        plt.bar(categories, values1, color='blue', label='Value 1')
        plt.bar(categories, values2, bottom=values1, color='green', label='Value 2')
        plt.bar(categories, values3, bottom=values1 + values2, color='orange', label='Value 3')

        plt.title('Stacked Bar Chart')
        plt.xlabel('Categories')
        plt.ylabel('Values')
        plt.legend()

        # Grouped Bar Chart
        plt.subplot(1, 2, 2)
        bar_width = 0.25
        index = np.arange(len(categories))

        plt.bar(index, values1, color='blue', width=bar_width, label='Value 1')
        plt.bar(index + bar_width, values2, color='green', width=bar_width, label='Value 2')
        plt.bar(index + 2 * bar_width, values3, color='orange', width=bar_width, label='Value 3')

        plt.title('Grouped Bar Chart')
        plt.xlabel('Categories')
        plt.ylabel('Values')
        plt.legend()

        # Save the figure
        plt.savefig('stacked_grouped_bar_charts.png')

        # Show the plots
        plt.tight_layout()
        plt.show()
        
        print("Plot generated successfully!")

    except Exception as e:
        print("An error occurred:", e)
    except ValueError as e:
        print("Invalid data format:", e)
    except TypeError as e:
        print("Data type mismatch:", e)

    # ... other specific exceptions as needed
     
if __name__ == "__main__":
    # This block ensures the following code executes 
    # only when this script is run directly,
    # not when imported as a module. 
    plot_stacked_and_grouped_bar_charts()
 